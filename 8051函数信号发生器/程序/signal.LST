C51 COMPILER V9.01   SIGNAL                                                                04/26/2015 15:51:55 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SIGNAL
OBJECT MODULE PLACED IN signal.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE signal.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "reg51.h"
   2          #include "stdio.h"
   3          
   4          #define uchar unsigned char
   5          #define uint unsigned int
   6          
   7          /*-------------LCD1602声明函数----------------*/
   8          void intint();
   9          void WR_data(uchar u,uchar *p,uchar set);
  10          void write_com(uchar com);
  11          void WR_data_one(uchar u,uchar p,uchar set);
  12          
  13          uchar code Frequency[]="f&Vo:0000Hz/0 V";
  14          uchar code SHA[]="Shap:";
  15          
  16          uchar code shap_a[]="NULL      ";                 
  17          uchar code shap_b[]="Square    ";
  18          uchar code shap_c[]="Triangular";
  19          uchar code shap_d[]="Sine      ";
  20          uchar code shap_e[]="Sawtooth  ";               
  21                                                          
  22          
  23          sbit key_a=P2^7;
  24          sbit key_b=P2^6;
  25          sbit key_c=P2^5;
  26          
  27          void delayms(uint ms)
  28          {
  29   1              uchar i;
  30   1              while(ms--) for(i=0;i<120;i++);
  31   1      }        
  32                       
  33          uchar code sin[]={
  34                                                  0x80,0x83,0x86,0x89,0x8d,0x90,0x93,0x96,0x99,0x9c,0x9f,0xa2,
  35                                                  0xa5,0xa8,0xab,0xae,0xb1,0xb4,0xb7,0xba,0xbc,0xbf,0xc2,0xc5,
  36                                                  0xc7,0xca,0xcc,0xcf,0xd1,0xd4,0xd6,0xd8,0xda,0xdd,0xdf,0xe1,
  37                                                  0xe3,0xe5,0xe7,0xe9,0xea,0xec,0xee,0xef,0xf1,0xf2,0xf4,0xf5,
  38                                                  0xf6,0xf7,0xf8,0xf9,0xfa,0xfb,0xfc,0xfd,0xfd,0xfe,0xff,0xff,
  39                                                  0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xfd,
  40                                                  0xfd,0xfc,0xfb,0xfa,0xf9,0xf8,0xf7,0xf6,0xf5,0xf4,0xf2,0xf1,
  41                                                  0xef,0xee,0xec,0xea,0xe9,0xe7,0xe5,0xe3,0xe1,0xde,0xdd,0xda,
  42                                                  0xd8,0xd6,0xd4,0xd1,0xcf,0xcc,0xca,0xc7,0xc5,0xc2,0xbf,0xbc,
  43                                                  0xba,0xb7,0xb4,0xb1,0xae,0xab,0xa8,0xa5,0xa2,0x9f,0x9c,0x99,
  44                                                  0x96,0x93,0x90,0x8d,0x89,0x86,0x83,0x80,0x80,0x7c,0x79,0x76,
  45                                                  0x72,0x6f,0x6c,0x69,0x66,0x63,0x60,0x5d,0x5a,0x57,0x55,0x51,
  46                                                  0x4e,0x4c,0x48,0x45,0x43,0x40,0x3d,0x3a,0x38,0x35,0x33,0x30,
  47                                                  0x2e,0x2b,0x29,0x27,0x25,0x22,0x20,0x1e,0x1c,0x1a,0x18,0x16,
  48                                                  0x15,0x13,0x11,0x10,0x0e,0x0d,0x0b,0x0a,0x09,0x08,0x07,0x06,
  49                                                  0x05,0x04,0x03,0x02,0x02,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
  50                                                  0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x02,0x03,0x04,0x05,
  51                                                  0x06,0x07,0x08,0x09,0x0a,0x0b,0x0d,0x0e,0x10,0x11,0x13,0x15,
  52                                                  0x16,0x18,0x1a,0x1c,0x1e,0x20,0x22,0x25,0x27,0x29,0x2b,0x2e,
  53                                                  0x30,0x33,0x35,0x38,0x3a,0x3d,0x40,0x43,0x45,0x48,0x4c,0x4e,
  54                                                  0x51,0x55,0x57,0x5a,0x5d,0x60,0x63,0x66 ,0x69,0x6c,0x6f,0x72,
  55                                                  0x76,0x79,0x7c,0x80
C51 COMPILER V9.01   SIGNAL                                                                04/26/2015 15:51:55 PAGE 2   

  56                                                  };
  57                                              
  58                                              
  59          uchar iu=0,ii=0,mode_a=0,mode_b=0,count_a=0;
  60          uint first=0,second=0,third=0,forth=0;
  61          uint full=255;
  62          uint freq=0,iii=0;
  63          uint freq_sine=43;
  64          float freq_que=0;
  65          uint vol=0;
  66          void DAC0832(unsigned char x)
  67          {
  68   1        P1=x;
  69   1      }
  70          void Timer0Init(void)           //0.001毫秒@12.000MHz
  71          {
  72   1              TMOD &= 0xF0;           //设置定时器模式
  73   1              TL0 = 0xFE;                     //设置定时初值
  74   1              TH0 = 0xFF;                     //设置定时初值
  75   1              TF0 = 0;                        //清除TF0标志
  76   1              TR0 = 1;                        //定时器0开始计时
  77   1      }
  78          
  79          void main()
  80          {
  81   1              uchar dsy[2];
  82   1              intint();                                                       //液晶屏初始化
  83   1              WR_data(1,Frequency,0);                         //使液晶片显示提示信息
  84   1              WR_data(2,SHA,0);
  85   1              WR_data(2,shap_a,5);
  86   1              write_com(0x0c);
  87   1              Timer0Init();                                           //定时器0初始化
  88   1              EA=1;                                                           //中断允许开
  89   1              ET0=1;                                                          //定时器0中断开
  90   1              IT0=1;                                                          //设置外部中断触发方式为负边沿触发
  91   1              EX0=1;                                                          //开启外部中断0
  92   1              while(1)
  93   1          { 
  94   2                      switch(mode_b)                                  //液晶屏显示设置
  95   2                      {
  96   3                              case 0:break;
  97   3                              case 1:sprintf(dsy,"%d",first);WR_data_one(1,dsy[0],8);TR0=0;break;              //设置频率值并关闭波形输出
  98   3                              case 2:sprintf(dsy,"%d",second);WR_data_one(1,dsy[0],7);break;
  99   3                              case 3:sprintf(dsy,"%d",third);WR_data_one(1,dsy[0],6);break;
 100   3                              case 4:sprintf(dsy,"%d",forth);WR_data_one(1,dsy[0],5);break;
 101   3                              case 5:sprintf(dsy,"%d",vol);WR_data(1,dsy,12);break;
 102   3                              case 6:
 103   3                                              write_com(0x0c);mode_b=0;TR0=1;                                                  //完成频率值的设置并开启波形输出
 104   3                                              freq=first+second*10+third*100+forth*1000;
 105   3                                              freq_que=10000/freq;
 106   3                                              freq_sine=43/freq;
 107   3                                              break;
 108   3      
 109   3                              default:break;  
 110   3                      }          
 111   2          }
 112   1      }
 113          void INT_0() interrupt 0                           //外部中断0服务子程序
 114          {
 115   1              if(mode_b==0)                                      //波形选择键屏蔽/开启
 116   1              if(key_a==0)                                       //波形选择键判断
 117   1              {
C51 COMPILER V9.01   SIGNAL                                                                04/26/2015 15:51:55 PAGE 3   

 118   2                      delayms(5);
 119   2                      while(key_a==0);
 120   2                      mode_a=(mode_a+1)%5;
 121   2                      switch(mode_a)                             //在液晶屏上显示波形信息
 122   2                      {
 123   3                              case 0:WR_data(2,shap_a,5);write_com(0x0c);break;
 124   3                              case 1:WR_data(2,shap_b,5);write_com(0x0c);break;
 125   3                              case 2:WR_data(2,shap_c,5);write_com(0x0c);break;
 126   3                              case 3:WR_data(2,shap_d,5);write_com(0x0c);break;
 127   3                              case 4:WR_data(2,shap_e,5);write_com(0x0c);break;
 128   3                              default:break;
 129   3                      }
 130   2              }
 131   1              if(key_b==0)                                            //功能选择键判断
 132   1              {
 133   2                      delayms(5);
 134   2                      while(key_b==0);
 135   2                      mode_b=(mode_b+1)%7;
 136   2              }
 137   1              if(key_c==0)                                            //频率设置键判断
 138   1              {
 139   2                      delayms(5);
 140   2                      while(key_c==0);
 141   2                      switch(mode_b)
 142   2                      {
 143   3                              case 1:first=(first+1)%10;break;
 144   3                              case 2:second=(second+1)%10;break;
 145   3                              case 3:third=(third+1)%10;break;
 146   3                              case 4:forth=(forth+1)%10;break;
 147   3                              case 5:vol=(vol+1)%11;break;
 148   3                              default:break;
 149   3                      }
 150   2              }
 151   1      }
 152          void Time0int() interrupt 1                        //定时器0中断服务子程序
 153          {
 154   1              TL0 = 0xFE;             //设置定时初值
 155   1              TH0 = 0xFF;             //设置定时初值
 156   1              
 157   1              
 158   1              switch(mode_a)                                     //波形输出控制
 159   1              {
 160   2                      case 0: iu=0;break;
 161   2                      case 1: iii++;
 162   2                                      if(iii==freq_que)
 163   2                                      {
 164   3                                              iii=0;full=~full;
 165   3                                              iu=(full*vol/10);
 166   3                                      }
 167   2                                      break;
 168   2                      case 2: iii++;
 169   2                                      if(iii==freq_sine)
 170   2                                      {
 171   3                                              iii=0;
 172   3                                              if(count_a<128) iu=count_a*vol/5;
 173   3                                              else  iu=(255-count_a)*vol/5;
 174   3                                              count_a+=1;
 175   3                                      }
 176   2                                      break;
 177   2                      case 3: iii++;
 178   2                                      if(iii==freq_sine)
 179   2                                      {
C51 COMPILER V9.01   SIGNAL                                                                04/26/2015 15:51:55 PAGE 4   

 180   3                                              iii=0;
 181   3                                              ii=(ii+1)%255;
 182   3                                              iu=sin[ii]*vol/10;
 183   3                                      }
 184   2                                      break;
 185   2                      case 4:iii++;
 186   2                                      if(iii==freq_sine)
 187   2                                      {
 188   3                                              iii=0;
 189   3                                              iu=count_a*vol/20;
 190   3                                              count_a+=1;
 191   3                                      }
 192   2                                      break;
 193   2                      default:iu=0;  
 194   2              }       
 195   1              DAC0832(iu);    
 196   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1061    ----
   CONSTANT SIZE    =    336    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     27       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
